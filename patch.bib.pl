#!/usr/bin/perl

use strict;
use warnings;

# warn user (from perspective of caller)
use Carp;

# use nice English (or awk) names for ugly punctuation variables
use English qw(-no_match_vars);
my @bib_files;

while (<>) {
	if (/^[^%]*\\addbibresource\{([^\{\}]*)\}/) {
		push @bib_files, $1;
	}
}
foreach my $out_file (@bib_files) {
	print "importing and patching $out_file";
	#copy("C:\\Users\\jan\\bib_files\\$_", $_) or die "Copy failed: $!";
	my $in_file = "C:\\Users\\jan\\bib_files\\$out_file";
	
	open my $INFILE, $in_file or croak "Could not open $in_file: $OS_ERROR";
	open my $OUTFILE, '>', $out_file or croak "Cannot open $out_file: $OS_ERROR";
	
	print { $OUTFILE } "Do not edit! File automatically generated by patching $in_file using \"patch.bib.pl v1.0\". \n\n" and	
		print { $OUTFILE } '@preamble{ " \newcommand{\noop}[1]{} " } % a do-nothing command that serves a purpose' and
		print { $OUTFILE } "\n\n" or croak "Cannot write to $out_file: $OS_ERROR";
	
	while(<$INFILE>)  {   
		if (/title ?= ?\{.*\},/) {
			s/^title ?= ?\{\{([^\n]*)\}\},$/title = \{$1\},/;
			s/(\W)(\w+[A-Z]\w*)/$1\{$2\}/g;
		}
		s/^year ?= ?\{(3[0-9]{3})\}/year = \{\\noop\{$1\}in press\}/;
		print { $OUTFILE } $_
			or croak "Cannot write to $out_file: $OS_ERROR";
	}
	close $INFILE
		or croak "Cannot close $in_file: $OS_ERROR";
	close $OUTFILE 
		or croak "Cannot close $out_file: $OS_ERROR";
}